00000000 : 00000000 : .... : ; Module: Start offset
00000004 : 00000064 : d... : ; Module: Initialisation code offset
00000008 : 00000078 : x... : ; Module: Finalisation code offset
0000000c : 00000098 : .... : ; Module: Service handler offset
00000010 : 00000034 : 4... : ; Module: Title string offset
00000014 : 0000003f : ?... : ; Module: Help string offset
00000018 : 00000000 : .... : ; Module: Command table offset
0000001c : 00000000 : .... : ; Module: SWI chunk
00000020 : 00000000 : .... : ; Module: SWI handler code offset
00000024 : 00000000 : .... : ; Module: SWI names table offset
00000028 : 00000000 : .... : ; Module: SWI decoding code offset
0000002c : 00000000 : .... : ; Module: Messages filename offset
00000030 : 00000060 : `... : ; Module: Extension flags offset
00000034 : 74737953 : Syst : ; Title string: SystemBell
00000038 : 65426d65 : emBe : ;   ...
0000003c : 53006c6c : ll.S : ; +3: Help string
00000040 : 65747379 : yste : ;   ...
00000044 : 6c65426d : mBel : ;   ...
00000048 : 2e30096c : l.0. : ;   ...
0000004c : 28203230 : 02 ( : ;   ...
00000050 : 4d203230 : 02 M : ;   ...
00000054 : 32207261 : ar 2 : ;   ...
00000058 : 29323030 : 002) : ;   ...
0000005c : 00000000 : .... : ;   ...
00000060 : 00000001 : .... : ; Extension flags
00000064 : e52de004 : ..-. : STR     LR, [SP, #-4]!            ; Initialisation code
00000068 : e3a02000 : . .. : MOV     R2, #0
0000006c : e58c2000 : . .. : STR     R2, [R12]
00000070 : e1a0c002 : .... : MOV     R12, R2
00000074 : e49df004 : .... : POP     {PC}
00000078 : e52de004 : ..-. : STR     LR, [SP, #-4]!            ; Finalisation code
0000007c : e59cc000 : .... : LDR     R12, [R12]
00000080 : e49df004 : .... : POP     {PC}
00000084 : 00000000 : .... : ; Fast service call table (flags)
00000088 : 000000a4 : .... : ; Fast service call code offset
0000008c : 00000016 : .... : ;   Service_ExternalBell
00000090 : 00000000 : .... : ; Service table terminator
00000094 : 00000084 : .... : ; Fast service call table offset
00000098 : e1a00000 : .... : MOV     R0, R0                    ; Service handler
0000009c : e3300016 : ..0. : TEQ     R0, #&16                  ; #22
000000a0 : 11a0f00e : .... : MOVNE   PC, LR
000000a4 : e92d403f : ?@-. : PUSH    {R0, R1, R2, R3, R4, R5, LR}  ; Fast service call entry
000000a8 : e59cc000 : .... : LDR     R12, [R12]
000000ac : e3a000d3 : .... : MOV     R0, #&d3                  ; #211
000000b0 : e3a01000 : .... : MOV     R1, #0
000000b4 : e3a020ff : . .. : MOV     R2, #&ff                  ; #255
000000b8 : ef020006 : .... : SWI     XOS_Byte
000000bc : e1a04001 : .@.. : MOV     R4, R1
000000c0 : e3a000d4 : .... : MOV     R0, #&d4                  ; #212
000000c4 : e3a01000 : .... : MOV     R1, #0
000000c8 : e3a020ff : . .. : MOV     R2, #&ff                  ; #255
000000cc : ef020006 : .... : SWI     XOS_Byte
000000d0 : e2013007 : .0.. : AND     R3, R1, #7
000000d4 : e3130004 : .... : TST     R3, #4
000000d8 : 12233014 : .0#. : EORNE   R3, R3, #&14              ; #20
000000dc : e1844403 : .D.. : ORR     R4, R4, R3, LSL #8
000000e0 : e1a02c01 : .,.. : MOV     R2, R1, LSL #24
000000e4 : e1a02dc2 : .-.. : MOV     R2, R2, ASR #27
000000e8 : e2822001 : . .. : ADD     R2, R2, #1
000000ec : e1844802 : .H.. : ORR     R4, R4, R2, LSL #16
000000f0 : e3a000d5 : .... : MOV     R0, #&d5                  ; #213
000000f4 : e3a01000 : .... : MOV     R1, #0
000000f8 : e3a020ff : . .. : MOV     R2, #&ff                  ; #255
000000fc : ef020006 : .... : SWI     XOS_Byte
00000100 : e1a05001 : .P.. : MOV     R5, R1
00000104 : e3a000d6 : .... : MOV     R0, #&d6                  ; #214
00000108 : e3a01000 : .... : MOV     R1, #0
0000010c : e3a020ff : . .. : MOV     R2, #&ff                  ; #255
00000110 : ef020006 : .... : SWI     XOS_Byte
00000114 : e1855801 : .X.. : ORR     R5, R5, R1, LSL #16
00000118 : e1a00004 : .... : MOV     R0, R4
0000011c : e1a01005 : .... : MOV     R1, R5
00000120 : ef060186 : .... : SWI     XSound_ControlPacked
00000124 : e8bd803f : ?... : POP     {R0, R1, R2, R3, R4, R5, PC}
